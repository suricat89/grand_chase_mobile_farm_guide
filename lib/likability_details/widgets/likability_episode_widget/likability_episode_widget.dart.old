import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:grand_chase_farm_guide/shared/models/likability_episode_model.dart';

class LikabilityEpisodeWidget extends StatefulWidget {
  final LikabilityEpisodeModel episodeModel;
  final String characterName;
  final int episodeNumber;
  final ValueChanged<bool> onEpisodeCompleteChanged;

  LikabilityEpisodeWidget({
    Key? key,
    required this.episodeModel,
    required this.characterName,
    required this.onEpisodeCompleteChanged,
    required this.episodeNumber,
  }) : super(key: key);

  @override
  _LikabilityEpisodeWidgetState createState() =>
      _LikabilityEpisodeWidgetState();
}

class _LikabilityEpisodeWidgetState extends State<LikabilityEpisodeWidget> {
  bool get episodeCompleted => widget.episodeModel.likabilityQuests
      .every((e) => e.ammountCompleted >= e.ammount);

  void changeAmmountCompleted(questIndex, newValue) {
    bool wasCompletedBefore = !!episodeCompleted;

    setState(() {
      widget.episodeModel.likabilityQuests[questIndex].ammountCompleted =
          newValue;
    });

    if (wasCompletedBefore != episodeCompleted) {
      widget.onEpisodeCompleteChanged(episodeCompleted);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 20),
      child: Container(
        width: double.maxFinite,
        decoration: BoxDecoration(
          color: episodeCompleted
              ? Color.fromRGBO(255, 255, 255, 0.8)
              : Colors.white,
          boxShadow: [
            BoxShadow(
              offset: Offset(0, 24),
              blurRadius: 38.0,
              color: Color.fromRGBO(0, 0, 0, 0.14),
            ),
            BoxShadow(
              offset: Offset(0, 9),
              blurRadius: 46,
              color: Color.fromRGBO(0, 0, 0, 0.12),
            ),
            BoxShadow(
              offset: Offset(0, 11),
              blurRadius: 15.0,
              color: Color.fromRGBO(0, 0, 0, 0.2),
            ),
          ],
        ),
        child: Padding(
          padding: const EdgeInsets.only(
            top: 20,
            right: 15,
            bottom: 30,
            left: 24,
          ),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                widget.episodeModel.episodeDescription,
                style: GoogleFonts.roboto(
                  fontWeight: FontWeight.w500,
                  fontSize: 16,
                  color: Colors.black87,
                ),
              ),
              Column(
                children: [
                  ...widget.episodeModel.likabilityQuests
                      .asMap()
                      .map(
                        (questIndex, e) => MapEntry(
                          questIndex,
                          Container(
                            child: Column(
                              children: [
                                CheckboxListTile(
                                  value: e.ammountCompleted >= e.ammount,
                                  controlAffinity:
                                      ListTileControlAffinity.leading,
                                  contentPadding: const EdgeInsets.all(0),
                                  onChanged: (newValue) {
                                    setState(() {
                                      if (newValue!) {
                                        changeAmmountCompleted(
                                            questIndex, e.ammount);
                                      } else {
                                        changeAmmountCompleted(questIndex, 0);
                                      }
                                    });
                                  },
                                  title: Text(
                                    e.getQuestDescription(widget.characterName),
                                    style: GoogleFonts.roboto(
                                      fontWeight: FontWeight.w400,
                                      fontSize: 16,
                                      color: Color.fromRGBO(0, 0, 0, 0.6),
                                    ),
                                  ),
                                ),
                                Slider(
                                  min: 0,
                                  max: e.ammount.toDouble(),
                                  divisions: e.ammount,
                                  label: e.ammountCompleted.toString(),
                                  onChanged: (double value) {
                                    changeAmmountCompleted(
                                        questIndex, value.truncate());
                                  },
                                  value: e.ammountCompleted.toDouble(),
                                )
                              ],
                            ),
                          ),
                        ),
                      )
                      .values
                      .toList()
                ],
              )
            ],
          ),
        ),
      ),
    );
  }
}
